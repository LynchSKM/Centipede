<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_spatial_hash_8cpp" kind="file" language="C++">
    <compoundname>SpatialHash.cpp</compoundname>
    <includes refid="_spatial_hash_8h" local="yes">SpatialHash.h</includes>
    <includes local="no">cmath</includes>
    <incdepgraph>
      <node id="758">
        <label>SpatialHash.h</label>
        <link refid="_spatial_hash_8h"/>
        <childnode refid="759" relation="include">
        </childnode>
        <childnode refid="760" relation="include">
        </childnode>
        <childnode refid="763" relation="include">
        </childnode>
        <childnode refid="767" relation="include">
        </childnode>
        <childnode refid="768" relation="include">
        </childnode>
        <childnode refid="766" relation="include">
        </childnode>
        <childnode refid="769" relation="include">
        </childnode>
      </node>
      <node id="763">
        <label>POSITION.H</label>
      </node>
      <node id="759">
        <label>Grid.h</label>
        <link refid="_grid_8h"/>
      </node>
      <node id="764">
        <label>cmath</label>
      </node>
      <node id="769">
        <label>map</label>
      </node>
      <node id="762">
        <label>BoundaryBox.h</label>
        <link refid="_boundary_box_8h"/>
        <childnode refid="763" relation="include">
        </childnode>
        <childnode refid="764" relation="include">
        </childnode>
        <childnode refid="765" relation="include">
        </childnode>
        <childnode refid="766" relation="include">
        </childnode>
      </node>
      <node id="765">
        <label>tuple</label>
      </node>
      <node id="766">
        <label>vector</label>
      </node>
      <node id="761">
        <label>ObjectType.h</label>
        <link refid="_object_type_8h"/>
      </node>
      <node id="757">
        <label>SpatialHash.cpp</label>
        <link refid="_spatial_hash_8cpp"/>
        <childnode refid="758" relation="include">
        </childnode>
        <childnode refid="764" relation="include">
        </childnode>
      </node>
      <node id="760">
        <label>IEntity.h</label>
        <link refid="_i_entity_8h"/>
        <childnode refid="761" relation="include">
        </childnode>
        <childnode refid="762" relation="include">
        </childnode>
        <childnode refid="763" relation="include">
        </childnode>
      </node>
      <node id="767">
        <label>algorithm</label>
      </node>
      <node id="768">
        <label>memory</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_spatial_hash_8h" kindref="compound">SpatialHash.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="class_spatial_hash_1a2a685a824f21fef91bc7439fda0965a6" refkind="member"><highlight class="normal"><ref refid="class_spatial_hash_1a2a685a824f21fef91bc7439fda0965a6" kindref="member">SpatialHash::SpatialHash</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_grid" kindref="compound">Grid</ref>&amp;<sp/>grid):grid_{grid},<sp/><ref refid="class_spatial_hash_1a4d0b5f614a759f61d76c4daad53266f4" kindref="member">cell_size_</ref>{80}</highlight></codeline>
<codeline lineno="5"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ctor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spatial_hash_1a23c64fe77b32c1b1480295aabe2978b8" kindref="member">buildMap</ref>();</highlight></codeline>
<codeline lineno="8"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="class_spatial_hash_1a23c64fe77b32c1b1480295aabe2978b8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spatial_hash_1a23c64fe77b32c1b1480295aabe2978b8" kindref="member">SpatialHash::buildMap</ref>()</highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>maxRow<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(std::floor(<ref refid="class_spatial_hash_1a525703c707c364fb5365b90a2fec8400" kindref="member">grid_</ref>.<ref refid="class_grid_1adfc1ee3214afb8c1a84e5106e2c499c4" kindref="member">getHeight</ref>()/<ref refid="class_spatial_hash_1a4d0b5f614a759f61d76c4daad53266f4" kindref="member">cell_size_</ref>));</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>maxCol<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(std::floor(<ref refid="class_spatial_hash_1a525703c707c364fb5365b90a2fec8400" kindref="member">grid_</ref>.<ref refid="class_grid_1a0d9e03cd17d99ff13a044d027012a9e2" kindref="member">getWidth</ref>()<sp/>/<ref refid="class_spatial_hash_1a4d0b5f614a759f61d76c4daad53266f4" kindref="member">cell_size_</ref>));</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((<ref refid="class_spatial_hash_1a525703c707c364fb5365b90a2fec8400" kindref="member">grid_</ref>.<ref refid="class_grid_1adfc1ee3214afb8c1a84e5106e2c499c4" kindref="member">getHeight</ref>()/<ref refid="class_spatial_hash_1a4d0b5f614a759f61d76c4daad53266f4" kindref="member">cell_size_</ref>)%<ref refid="class_spatial_hash_1a4d0b5f614a759f61d76c4daad53266f4" kindref="member">cell_size_</ref>!=0)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++maxRow;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((<ref refid="class_spatial_hash_1a525703c707c364fb5365b90a2fec8400" kindref="member">grid_</ref>.<ref refid="class_grid_1a0d9e03cd17d99ff13a044d027012a9e2" kindref="member">getWidth</ref>()/<ref refid="class_spatial_hash_1a4d0b5f614a759f61d76c4daad53266f4" kindref="member">cell_size_</ref>)%<ref refid="class_spatial_hash_1a4d0b5f614a759f61d76c4daad53266f4" kindref="member">cell_size_</ref>!=0)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++maxCol;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hash_id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cell_id_row<sp/>=<sp/>0;<sp/>cell_id_row<sp/>&lt;<sp/>maxRow;<sp/>cell_id_row++)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cell_id_col<sp/>=<sp/>0;<sp/>cell_id_col<sp/>&lt;<sp/>maxCol;<sp/>cell_id_col++)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>temp_pair<sp/>=<sp/>pair&lt;int,<sp/>vector&lt;IEntity_ptr&gt;&gt;(hash_id,<sp/>vector&lt;IEntity_ptr&gt;());</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_spatial_hash_1a7fd81b6076b8dc56de145bc933ed1cca" kindref="member">game_object_table_</ref>.insert(temp_pair);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++hash_id;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="class_spatial_hash_1a0f1fc93eebd653259103671e619df094" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spatial_hash_1a0f1fc93eebd653259103671e619df094" kindref="member">SpatialHash::generateSpatialHashTable</ref>(vector&lt;IEntity_ptr&gt;&amp;<sp/>game_objects)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spatial_hash_1a66a559d3ee222216bf08f7ea36be7417" kindref="member">clearAll</ref>();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>:<sp/>game_objects)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>in<sp/>map:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_spatial_hash_1a663251e84c6eca8303b181c480e76de2" kindref="member">saveLocations</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="class_spatial_hash_1a4ce61752d2ec67c16323002d345df77b" refkind="member"><highlight class="normal">vector&lt;IEntity_ptr&gt;<sp/><ref refid="class_spatial_hash_1a4ce61752d2ec67c16323002d345df77b" kindref="member">SpatialHash::retrieveNearbyObjects</ref>(<ref refid="_spatial_hash_8h_1ae582ab202da5e80230f32e4d667f7fa9" kindref="member">IEntity_ptr</ref><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;unsigned<sp/>int&gt;<sp/>uniqueCells(5);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;IEntity_ptr&gt;<sp/>nearbyObjects;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>game_object_locations<sp/>=<sp/><ref refid="class_spatial_hash_1a3a9f73d146cb3d5969fdbd78e524f84b" kindref="member">getObjectLocations</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>object_cell_locations<sp/>=<sp/><ref refid="class_spatial_hash_1a5d0a1d19c6251359bfa99b9b2738de57" kindref="member">generateMapKeys</ref>(game_object_locations);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>duplicates:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>sort(object_cell_locations.begin(),<sp/>object_cell_locations.end());</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iter_cell_locations<sp/>=<sp/>unique_copy(object_cell_locations.begin(),</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object_cell_locations.end(),</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uniqueCells.begin());</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Resize<sp/>vector:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>uniqueCells.resize(std::distance(uniqueCells.begin(),<sp/>iter_cell_locations));</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>cells<sp/>where<sp/>object<sp/>can<sp/>be<sp/>found:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>cell<sp/>:<sp/>uniqueCells)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iter_map<sp/>=<sp/><ref refid="class_spatial_hash_1a7fd81b6076b8dc56de145bc933ed1cca" kindref="member">game_object_table_</ref>.find(cell);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iter_map<sp/>!=<sp/><ref refid="class_spatial_hash_1a7fd81b6076b8dc56de145bc933ed1cca" kindref="member">game_object_table_</ref>.end())</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>object_in_proximity<sp/>:<sp/>iter_map-&gt;second)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">!=object_in_proximity)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(std::count(nearbyObjects.begin(),<sp/>nearbyObjects.end(),<sp/>object_in_proximity)==0)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nearbyObjects.push_back(object_in_proximity);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nearbyObjects;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="class_spatial_hash_1a3a9f73d146cb3d5969fdbd78e524f84b" refkind="member"><highlight class="normal">vector&lt;Position&gt;<sp/><ref refid="class_spatial_hash_1a3a9f73d146cb3d5969fdbd78e524f84b" kindref="member">SpatialHash::getObjectLocations</ref>(<ref refid="_spatial_hash_8h_1ae582ab202da5e80230f32e4d667f7fa9" kindref="member">IEntity_ptr</ref>&amp;<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;Position&gt;<sp/>object_locations(5);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iter_vec<sp/>=<sp/>object_locations.begin();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>(*iter_vec)<sp/>=<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">-&gt;getPosition();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>vertex<sp/>:<sp/>object-&gt;getBoundaryBox().getVertices())</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter_vec;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*iter_vec)<sp/>=<sp/>vertex;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>object_locations;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="class_spatial_hash_1ae1b06cf6d968ceaf8731a9ecbb06c836" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_spatial_hash_1ae1b06cf6d968ceaf8731a9ecbb06c836" kindref="member">SpatialHash::generateMapKey</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Position&amp;<sp/>position)</highlight></codeline>
<codeline lineno="93"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="comment">//uses<sp/>column<sp/>wise<sp/>cell<sp/>id<sp/>iteration:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>x<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(std::floor(position.getX_pos()/<ref refid="class_spatial_hash_1a4d0b5f614a759f61d76c4daad53266f4" kindref="member">cell_size_</ref>));</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>y<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(std::floor(position.getY_pos()/<ref refid="class_spatial_hash_1a4d0b5f614a759f61d76c4daad53266f4" kindref="member">cell_size_</ref>));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cell_id<sp/>=<sp/>((x*(<ref refid="class_spatial_hash_1a525703c707c364fb5365b90a2fec8400" kindref="member">grid_</ref>.<ref refid="class_grid_1adfc1ee3214afb8c1a84e5106e2c499c4" kindref="member">getHeight</ref>()/<ref refid="class_spatial_hash_1a4d0b5f614a759f61d76c4daad53266f4" kindref="member">cell_size_</ref>)+y));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cell_id;</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="class_spatial_hash_1a5d0a1d19c6251359bfa99b9b2738de57" refkind="member"><highlight class="normal">vector&lt;unsigned<sp/>int&gt;<sp/><ref refid="class_spatial_hash_1a5d0a1d19c6251359bfa99b9b2738de57" kindref="member">SpatialHash::generateMapKeys</ref>(vector&lt;Position&gt;&amp;<sp/>positions)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;unsigned<sp/>int&gt;<sp/>object_cell_locations(5);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iter_cell_loc<sp/>=<sp/>object_cell_locations.begin();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>position<sp/>:<sp/>positions)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*iter_cell_loc)<sp/>=<sp/><ref refid="class_spatial_hash_1ae1b06cf6d968ceaf8731a9ecbb06c836" kindref="member">generateMapKey</ref>(position);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter_cell_loc;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>object_cell_locations;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="class_spatial_hash_1a663251e84c6eca8303b181c480e76de2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spatial_hash_1a663251e84c6eca8303b181c480e76de2" kindref="member">SpatialHash::saveLocations</ref>(<ref refid="_spatial_hash_8h_1ae582ab202da5e80230f32e4d667f7fa9" kindref="member">IEntity_ptr</ref><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>game_object_locations<sp/>=<sp/><ref refid="class_spatial_hash_1a3a9f73d146cb3d5969fdbd78e524f84b" kindref="member">getObjectLocations</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>object_cell_locations<sp/>=<sp/><ref refid="class_spatial_hash_1a5d0a1d19c6251359bfa99b9b2738de57" kindref="member">generateMapKeys</ref>(game_object_locations);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>cell<sp/>:<sp/>object_cell_locations)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iter_map<sp/>=<sp/><ref refid="class_spatial_hash_1a7fd81b6076b8dc56de145bc933ed1cca" kindref="member">game_object_table_</ref>.find(cell);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iter_map!=<ref refid="class_spatial_hash_1a7fd81b6076b8dc56de145bc933ed1cca" kindref="member">game_object_table_</ref>.end())</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iter_vec<sp/>=<sp/>find(begin(iter_map-&gt;second),<sp/>end(iter_map-&gt;second),<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iter_vec<sp/>==<sp/>(iter_map-&gt;second).end())</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(iter_map-&gt;second).push_back(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="class_spatial_hash_1a66a559d3ee222216bf08f7ea36be7417" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spatial_hash_1a66a559d3ee222216bf08f7ea36be7417" kindref="member">SpatialHash::clearAll</ref>()</highlight></codeline>
<codeline lineno="133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iter_map<sp/>=<sp/><ref refid="class_spatial_hash_1a7fd81b6076b8dc56de145bc933ed1cca" kindref="member">game_object_table_</ref>.begin();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iter_end<sp/>=<sp/><ref refid="class_spatial_hash_1a7fd81b6076b8dc56de145bc933ed1cca" kindref="member">game_object_table_</ref>.end();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>;<sp/>iter_map!=iter_end;<sp/>iter_map++)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(iter_map-&gt;second).clear();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="class_spatial_hash_1a94d1324fb7380ff6cdd98574df2d62a3" refkind="member"><highlight class="normal"><ref refid="class_spatial_hash_1a94d1324fb7380ff6cdd98574df2d62a3" kindref="member">SpatialHash::~SpatialHash</ref>()</highlight></codeline>
<codeline lineno="144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//dtor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/SpatialHash.cpp"/>
  </compounddef>
</doxygen>
