<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_spider" kind="class" language="C++" prot="public">
    <compoundname>Spider</compoundname>
    <basecompoundref refid="class_i_moving_entity" prot="public" virt="non-virtual">IMovingEntity</basecompoundref>
    <includes refid="_spider_8h" local="no">Spider.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_spider_1a8e66c089757f4a6cca9cbb6d649c4aed" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_grid" kindref="compound">Grid</ref></type>
        <definition>const Grid Spider::grid_</definition>
        <argsstring></argsstring>
        <name>grid_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.h" line="111" column="1" bodyfile="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spider_1a4c990c26150892642582beb0c682c8af" prot="private" static="no" mutable="no">
        <type>Position</type>
        <definition>Position Spider::position_</definition>
        <argsstring></argsstring>
        <name>position_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.h" line="112" column="1" bodyfile="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spider_1aefaf87e8e341f1eb2c90bcaf8692e3f9" prot="private" static="no" mutable="no">
        <type><ref refid="_direction_8h_1a224b9163917ac32fc95a60d8c1eec3aa" kindref="member">Direction</ref></type>
        <definition>Direction Spider::major_direction_</definition>
        <argsstring></argsstring>
        <name>major_direction_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.h" line="113" column="1" bodyfile="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spider_1a6585bbd1a6320b0359e20f6475e92e1b" prot="private" static="no" mutable="no">
        <type><ref refid="_direction_8h_1a224b9163917ac32fc95a60d8c1eec3aa" kindref="member">Direction</ref></type>
        <definition>Direction Spider::movementDirection_</definition>
        <argsstring></argsstring>
        <name>movementDirection_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.h" line="114" column="1" bodyfile="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spider_1ae3802679fb1c90667b4e9aad950d3318" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Spider::isAlive_</definition>
        <argsstring></argsstring>
        <name>isAlive_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.h" line="115" column="1" bodyfile="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spider_1a17e2e481b4d443148c1525701b31717e" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Spider::turningPointAvailable_</definition>
        <argsstring></argsstring>
        <name>turningPointAvailable_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.h" line="116" column="1" bodyfile="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spider_1a39b07618960d0b2eef3a72e907adfc6c" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Spider::slope_</definition>
        <argsstring></argsstring>
        <name>slope_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.h" line="117" column="1" bodyfile="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spider_1a5324e3dc63f68c23c6f945819b28de20" prot="private" static="no" mutable="no">
        <type>Position</type>
        <definition>Position Spider::turningPoint_</definition>
        <argsstring></argsstring>
        <name>turningPoint_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.h" line="118" column="1" bodyfile="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_spider_1ab20716800b9e5dc01a48855c5e4960d6" prot="private" static="yes" mutable="no">
        <type>struct <ref refid="struct_spider_dimensions" kindref="compound">SpiderDimensions</ref></type>
        <definition>struct SpiderDimensions Spider::dimensions_</definition>
        <argsstring></argsstring>
        <name>dimensions_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.h" line="118" column="1" bodyfile="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_spider_1a2666e513d12e6ccf34b0cc90ff5b7843" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Spider::Spider</definition>
        <argsstring>(const Grid &amp;grid)</argsstring>
        <name>Spider</name>
        <param>
          <type>const <ref refid="class_grid" kindref="compound">Grid</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <briefdescription>
<para>Parameterized Constructor. Creates a <ref refid="class_spider" kindref="compound">Spider</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>grid</parametername>
</parameternamelist>
<parameterdescription>
<para>is of type <ref refid="class_grid" kindref="compound">Grid</ref> and contains screen width and height. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.h" line="34" column="1" bodyfile="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.cpp" bodystart="7" bodyend="25"/>
        <references refid="_direction_8h_1a224b9163917ac32fc95a60d8c1eec3aaac4e0e4e3118472beeb2ae75827450f1f">DOWN</references>
        <references refid="_direction_8h_1a224b9163917ac32fc95a60d8c1eec3aaa684d325a7303f52e64011467ff5c5758">LEFT</references>
      </memberdef>
      <memberdef kind="function" id="class_spider_1a847823793e44603b84396dfcf3ebce40" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>Spider::~Spider</definition>
        <argsstring>()</argsstring>
        <name>~Spider</name>
        <briefdescription>
<para>Virtual Destructor. Destroys a <ref refid="class_spider" kindref="compound">Spider</ref> object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.h" line="38" column="1" bodyfile="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.cpp" bodystart="202" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="class_spider_1aec113188217436f4434be35684916b39" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Spider::move</definition>
        <argsstring>() override</argsstring>
        <name>move</name>
        <reimplements refid="class_i_moving_entity_1a5894f3ff2c9b15299e94e84c3234236e">move</reimplements>
        <briefdescription>
<para>Inherited from <ref refid="class_i_moving_entity" kindref="compound">IMovingEntity</ref>. A virtual function that moves a <ref refid="class_spider" kindref="compound">Spider</ref> object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.h" line="43" column="1" bodyfile="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.cpp" bodystart="127" bodyend="144"/>
        <references refid="_direction_8h_1a224b9163917ac32fc95a60d8c1eec3aaafbaedde498cdead4f2780217646e9ba1">UP</references>
        <references refid="_direction_8h_1a224b9163917ac32fc95a60d8c1eec3aaac4e0e4e3118472beeb2ae75827450f1f">DOWN</references>
      </memberdef>
      <memberdef kind="function" id="class_spider_1af141a04cbaf8a68c44e449cb9a518608" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="_direction_8h_1a224b9163917ac32fc95a60d8c1eec3aa" kindref="member">Direction</ref></type>
        <definition>Direction Spider::getDirection</definition>
        <argsstring>() const override</argsstring>
        <name>getDirection</name>
        <reimplements refid="class_i_moving_entity_1ae72b13230406be63bf6431887e9b1286">getDirection</reimplements>
        <briefdescription>
<para>Inherited from <ref refid="class_i_moving_entity" kindref="compound">IMovingEntity</ref>. A virtual function that returns the direction of a <ref refid="class_spider" kindref="compound">Spider</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Direction an enum of type enum class Direction. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.h" line="49" column="1" bodyfile="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.cpp" bodystart="146" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="class_spider_1a467243104195a4793c7305fcea92968c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Spider::setDirection</definition>
        <argsstring>(Direction direction) override</argsstring>
        <name>setDirection</name>
        <reimplements refid="class_i_moving_entity_1a8fe095ff0e0617e6d57280c98c5a3b35">setDirection</reimplements>
        <param>
          <type><ref refid="_direction_8h_1a224b9163917ac32fc95a60d8c1eec3aa" kindref="member">Direction</ref></type>
          <declname>direction</declname>
        </param>
        <briefdescription>
<para>Inherited from <ref refid="class_i_moving_entity" kindref="compound">IMovingEntity</ref>. A virtual function that sets the direction of a <ref refid="class_spider" kindref="compound">Spider</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>direction</parametername>
</parameternamelist>
<parameterdescription>
<para>an enum of enum class Direction. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.h" line="55" column="1" bodyfile="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.cpp" bodystart="182" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="class_spider_1a9ea74d5b6e4c99dd175cf6a9db9e2de2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="_object_type_8h_1a842c5e2e69277690b064bf363c017980" kindref="member">ObjectType</ref></type>
        <definition>ObjectType Spider::getObjectType</definition>
        <argsstring>() const override</argsstring>
        <name>getObjectType</name>
        <reimplements refid="class_i_moving_entity_1a847e36ca99c5a9cc9636e17c2172431d">getObjectType</reimplements>
        <briefdescription>
<para>Inherited from <ref refid="class_i_moving_entity" kindref="compound">IMovingEntity</ref>. A virtual function that returns an enum of <ref refid="_object_type_8h_1a842c5e2e69277690b064bf363c017980a9e7abc16c6a1b9bcd2d330c63933d981" kindref="member">ObjectType::SPIDER</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>ObjectType an enum of the strongly typed enum class ObjectType. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.h" line="61" column="1" bodyfile="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.cpp" bodystart="151" bodyend="154"/>
        <references refid="_object_type_8h_1a842c5e2e69277690b064bf363c017980a9e7abc16c6a1b9bcd2d330c63933d981">SPIDER</references>
      </memberdef>
      <memberdef kind="function" id="class_spider_1a2de5c65fb5f1aad1d6b15294203acb27" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>Position</type>
        <definition>Position Spider::getPosition</definition>
        <argsstring>() const override</argsstring>
        <name>getPosition</name>
        <reimplements refid="class_i_moving_entity_1ae1da868e3a806bcec08a2a1b85cd55b2">getPosition</reimplements>
        <briefdescription>
<para>Inherited from <ref refid="class_i_moving_entity" kindref="compound">IMovingEntity</ref>. A virtual function that returns a Position of a <ref refid="class_spider" kindref="compound">Spider</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Position of a <ref refid="class_spider" kindref="compound">Spider</ref> object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.h" line="67" column="1" bodyfile="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.cpp" bodystart="156" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="class_spider_1a58f57b76220c51c4101e155aca15c5d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_boundary_box" kindref="compound">BoundaryBox</ref></type>
        <definition>BoundaryBox Spider::getBoundaryBox</definition>
        <argsstring>() override</argsstring>
        <name>getBoundaryBox</name>
        <reimplements refid="class_i_moving_entity_1a57296163f5bcc2fdc411e551b7cdf048">getBoundaryBox</reimplements>
        <briefdescription>
<para>Inherited from <ref refid="class_i_moving_entity" kindref="compound">IMovingEntity</ref>. A virtual function that returns a <ref refid="class_boundary_box" kindref="compound">BoundaryBox</ref> indicating the rectangular area covered by a <ref refid="class_spider" kindref="compound">Spider</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="class_boundary_box" kindref="compound">BoundaryBox</ref> object of the type <ref refid="class_boundary_box" kindref="compound">BoundaryBox</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.h" line="73" column="1" bodyfile="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.cpp" bodystart="161" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="class_spider_1a0ac5f12ec76bb66b831cb24eb4a24f09" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Spider::isAlive</definition>
        <argsstring>() const override</argsstring>
        <name>isAlive</name>
        <reimplements refid="class_i_moving_entity_1a20afa4c19be2b8ac12dcd48a1399b42e">isAlive</reimplements>
        <briefdescription>
<para>Inherited from <ref refid="class_i_moving_entity" kindref="compound">IMovingEntity</ref>. A virtual function that queries if a <ref refid="class_spider" kindref="compound">Spider</ref> object is still alive or not. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>bool </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.h" line="79" column="1" bodyfile="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.cpp" bodystart="166" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="class_spider_1aeb23ee990c5c952c588341833bb41657" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Spider::eliminated</definition>
        <argsstring>() override</argsstring>
        <name>eliminated</name>
        <reimplements refid="class_i_moving_entity_1adf5c51d0261ca88cabe426035e35d3f4">eliminated</reimplements>
        <briefdescription>
<para>Inherited from <ref refid="class_i_moving_entity" kindref="compound">IMovingEntity</ref>. A virtual function that sets a <ref refid="class_spider" kindref="compound">Spider</ref> object as not alive when killed. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.h" line="85" column="1" bodyfile="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.cpp" bodystart="171" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="class_spider_1a3398cebf9fae493abba1c620526d147d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Spider::reincarnate</definition>
        <argsstring>() override</argsstring>
        <name>reincarnate</name>
        <reimplements refid="class_i_moving_entity_1a13789b262b1181554e021ddda4b48dbc">reincarnate</reimplements>
        <briefdescription>
<para>Inherited from <ref refid="class_i_moving_entity" kindref="compound">IMovingEntity</ref>. A virtual function that will not be implemented because a <ref refid="class_spider" kindref="compound">Spider</ref> only has one life. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.h" line="91" column="1" bodyfile="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.cpp" bodystart="187" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="class_spider_1ac4a828c44ae66ae80db4882d471cef8c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int Spider::getRemainingLives</definition>
        <argsstring>() const override</argsstring>
        <name>getRemainingLives</name>
        <reimplements refid="class_i_moving_entity_1a7cb604cf82c50ebc008c17b76f979b53">getRemainingLives</reimplements>
        <briefdescription>
<para>Inherited from <ref refid="class_i_moving_entity" kindref="compound">IMovingEntity</ref>. A virtual function that will be used to return the remaining lives of a <ref refid="class_spider" kindref="compound">Spider</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>int indicating the number of remaining lives. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.h" line="97" column="1" bodyfile="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.cpp" bodystart="176" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="class_spider_1af84ecfac0c9151519c6cf03c6ae18b14" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Spider::isPoisoned</definition>
        <argsstring>() const override</argsstring>
        <name>isPoisoned</name>
        <reimplements refid="class_i_moving_entity_1ab655d8dfe0684e4bc6f34ae9d57ed654">isPoisoned</reimplements>
        <briefdescription>
<para>Inherited from <ref refid="class_i_moving_entity" kindref="compound">IMovingEntity</ref>. A virtual function that will be to return false for the poisoned status of a <ref refid="class_spider" kindref="compound">Spider</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>bool </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.h" line="103" column="1" bodyfile="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.cpp" bodystart="192" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="class_spider_1ae504ae966cdd27329d16b247cb21c596" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Spider::poison</definition>
        <argsstring>() override</argsstring>
        <name>poison</name>
        <reimplements refid="class_i_moving_entity_1a0331437e754efc8696d809b51043b339">poison</reimplements>
        <briefdescription>
<para>Inherited from <ref refid="class_i_moving_entity" kindref="compound">IMovingEntity</ref>. A virtual function that will not be implemented because a <ref refid="class_spider" kindref="compound">Spider</ref> cannot be poisoned. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.h" line="108" column="1" bodyfile="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.cpp" bodystart="197" bodyend="200"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_spider_1a456d9495aca3a636e584b3d8678596fd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Spider::moveUp</definition>
        <argsstring>()</argsstring>
        <name>moveUp</name>
        <briefdescription>
<para>A function that modifies the position of the object such that the object moves up. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.h" line="124" column="1" bodyfile="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.cpp" bodystart="67" bodyend="96"/>
        <references refid="_direction_8h_1a224b9163917ac32fc95a60d8c1eec3aaa684d325a7303f52e64011467ff5c5758">LEFT</references>
        <references refid="_direction_8h_1a224b9163917ac32fc95a60d8c1eec3aaac4e0e4e3118472beeb2ae75827450f1f">DOWN</references>
      </memberdef>
      <memberdef kind="function" id="class_spider_1ace407f694d63ed88367963310747c739" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Spider::moveDown</definition>
        <argsstring>()</argsstring>
        <name>moveDown</name>
        <briefdescription>
<para>A function that modifies the position of the object such that the object moves down. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.h" line="129" column="1" bodyfile="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.cpp" bodystart="98" bodyend="125"/>
        <references refid="_direction_8h_1a224b9163917ac32fc95a60d8c1eec3aaa684d325a7303f52e64011467ff5c5758">LEFT</references>
        <references refid="_direction_8h_1a224b9163917ac32fc95a60d8c1eec3aaafbaedde498cdead4f2780217646e9ba1">UP</references>
      </memberdef>
      <memberdef kind="function" id="class_spider_1a8bdb1e16cfce886971ac1ec53d019233" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Spider::CalculateSlope</definition>
        <argsstring>()</argsstring>
        <name>CalculateSlope</name>
        <briefdescription>
<para>Generates the next turning point and gets the slope of the line to that point. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.h" line="134" column="1" bodyfile="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.cpp" bodystart="27" bodyend="65"/>
        <references refid="_direction_8h_1a224b9163917ac32fc95a60d8c1eec3aaac4e0e4e3118472beeb2ae75827450f1f">DOWN</references>
        <references refid="_direction_8h_1a224b9163917ac32fc95a60d8c1eec3aaa684d325a7303f52e64011467ff5c5758">LEFT</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This is a class that inherits from the <ref refid="class_i_moving_entity" kindref="compound">IMovingEntity</ref> class. It models a <ref refid="class_spider" kindref="compound">Spider</ref> object in the game. It contains virtual functions that will be overridden. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>1043475 Lynch Mwaniki and 1076467 Madimetja Sethosa. </para></simplesect>
<simplesect kind="version"><para>3.0 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="136">
        <label>Spider</label>
        <link refid="class_spider"/>
        <childnode refid="137" relation="public-inheritance">
        </childnode>
      </node>
      <node id="138">
        <label>IEntity</label>
        <link refid="class_i_entity"/>
      </node>
      <node id="137">
        <label>IMovingEntity</label>
        <link refid="class_i_moving_entity"/>
        <childnode refid="138" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="139">
        <label>Spider</label>
        <link refid="class_spider"/>
        <childnode refid="140" relation="public-inheritance">
        </childnode>
        <childnode refid="142" relation="usage">
          <edgelabel>grid_</edgelabel>
        </childnode>
        <childnode refid="143" relation="usage">
          <edgelabel>dimensions_</edgelabel>
        </childnode>
      </node>
      <node id="141">
        <label>IEntity</label>
        <link refid="class_i_entity"/>
      </node>
      <node id="143">
        <label>SpiderDimensions</label>
        <link refid="struct_spider_dimensions"/>
      </node>
      <node id="142">
        <label>Grid</label>
        <link refid="class_grid"/>
      </node>
      <node id="140">
        <label>IMovingEntity</label>
        <link refid="class_i_moving_entity"/>
        <childnode refid="141" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.h" line="29" column="1" bodyfile="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Spider.h" bodystart="28" bodyend="135"/>
    <listofallmembers>
      <member refid="class_spider_1a8bdb1e16cfce886971ac1ec53d019233" prot="private" virt="non-virtual"><scope>Spider</scope><name>CalculateSlope</name></member>
      <member refid="class_spider_1ab20716800b9e5dc01a48855c5e4960d6" prot="private" virt="non-virtual"><scope>Spider</scope><name>dimensions_</name></member>
      <member refid="class_spider_1aeb23ee990c5c952c588341833bb41657" prot="public" virt="virtual"><scope>Spider</scope><name>eliminated</name></member>
      <member refid="class_spider_1a58f57b76220c51c4101e155aca15c5d2" prot="public" virt="virtual"><scope>Spider</scope><name>getBoundaryBox</name></member>
      <member refid="class_spider_1af141a04cbaf8a68c44e449cb9a518608" prot="public" virt="virtual"><scope>Spider</scope><name>getDirection</name></member>
      <member refid="class_spider_1a9ea74d5b6e4c99dd175cf6a9db9e2de2" prot="public" virt="virtual"><scope>Spider</scope><name>getObjectType</name></member>
      <member refid="class_spider_1a2de5c65fb5f1aad1d6b15294203acb27" prot="public" virt="virtual"><scope>Spider</scope><name>getPosition</name></member>
      <member refid="class_spider_1ac4a828c44ae66ae80db4882d471cef8c" prot="public" virt="virtual"><scope>Spider</scope><name>getRemainingLives</name></member>
      <member refid="class_spider_1a8e66c089757f4a6cca9cbb6d649c4aed" prot="private" virt="non-virtual"><scope>Spider</scope><name>grid_</name></member>
      <member refid="class_spider_1a0ac5f12ec76bb66b831cb24eb4a24f09" prot="public" virt="virtual"><scope>Spider</scope><name>isAlive</name></member>
      <member refid="class_spider_1ae3802679fb1c90667b4e9aad950d3318" prot="private" virt="non-virtual"><scope>Spider</scope><name>isAlive_</name></member>
      <member refid="class_spider_1af84ecfac0c9151519c6cf03c6ae18b14" prot="public" virt="virtual"><scope>Spider</scope><name>isPoisoned</name></member>
      <member refid="class_spider_1aefaf87e8e341f1eb2c90bcaf8692e3f9" prot="private" virt="non-virtual"><scope>Spider</scope><name>major_direction_</name></member>
      <member refid="class_spider_1aec113188217436f4434be35684916b39" prot="public" virt="virtual"><scope>Spider</scope><name>move</name></member>
      <member refid="class_spider_1ace407f694d63ed88367963310747c739" prot="private" virt="non-virtual"><scope>Spider</scope><name>moveDown</name></member>
      <member refid="class_spider_1a6585bbd1a6320b0359e20f6475e92e1b" prot="private" virt="non-virtual"><scope>Spider</scope><name>movementDirection_</name></member>
      <member refid="class_spider_1a456d9495aca3a636e584b3d8678596fd" prot="private" virt="non-virtual"><scope>Spider</scope><name>moveUp</name></member>
      <member refid="class_spider_1ae504ae966cdd27329d16b247cb21c596" prot="public" virt="virtual"><scope>Spider</scope><name>poison</name></member>
      <member refid="class_spider_1a4c990c26150892642582beb0c682c8af" prot="private" virt="non-virtual"><scope>Spider</scope><name>position_</name></member>
      <member refid="class_spider_1a3398cebf9fae493abba1c620526d147d" prot="public" virt="virtual"><scope>Spider</scope><name>reincarnate</name></member>
      <member refid="class_spider_1a467243104195a4793c7305fcea92968c" prot="public" virt="virtual"><scope>Spider</scope><name>setDirection</name></member>
      <member refid="class_spider_1a39b07618960d0b2eef3a72e907adfc6c" prot="private" virt="non-virtual"><scope>Spider</scope><name>slope_</name></member>
      <member refid="class_spider_1a2666e513d12e6ccf34b0cc90ff5b7843" prot="public" virt="non-virtual"><scope>Spider</scope><name>Spider</name></member>
      <member refid="class_spider_1a5324e3dc63f68c23c6f945819b28de20" prot="private" virt="non-virtual"><scope>Spider</scope><name>turningPoint_</name></member>
      <member refid="class_spider_1a17e2e481b4d443148c1525701b31717e" prot="private" virt="non-virtual"><scope>Spider</scope><name>turningPointAvailable_</name></member>
      <member refid="class_i_entity_1a8aea4fbca51d17a0ce314aaa4633f28e" prot="public" virt="virtual"><scope>Spider</scope><name>~IEntity</name></member>
      <member refid="class_i_moving_entity_1a2d7480d85770952b23fc554efe95a40a" prot="public" virt="virtual"><scope>Spider</scope><name>~IMovingEntity</name></member>
      <member refid="class_spider_1a847823793e44603b84396dfcf3ebce40" prot="public" virt="virtual"><scope>Spider</scope><name>~Spider</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
