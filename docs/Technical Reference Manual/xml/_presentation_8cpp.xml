<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_presentation_8cpp" kind="file" language="C++">
    <compoundname>Presentation.cpp</compoundname>
    <includes refid="_presentation_8h" local="yes">Presentation.h</includes>
    <incdepgraph>
      <node id="638">
        <label>SFML/Graphics.hpp</label>
      </node>
      <node id="648">
        <label>POSITION.H</label>
      </node>
      <node id="651">
        <label>IMovingEntity.h</label>
        <link refid="_i_moving_entity_8h"/>
        <childnode refid="645" relation="include">
        </childnode>
        <childnode refid="646" relation="include">
        </childnode>
        <childnode refid="647" relation="include">
        </childnode>
        <childnode refid="648" relation="include">
        </childnode>
        <childnode refid="652" relation="include">
        </childnode>
      </node>
      <node id="658">
        <label>GameWonScreen.h</label>
        <link refid="_game_won_screen_8h"/>
        <childnode refid="638" relation="include">
        </childnode>
        <childnode refid="656" relation="include">
        </childnode>
      </node>
      <node id="639">
        <label>SFML/Audio/Sound.hpp</label>
      </node>
      <node id="654">
        <label>Grid.h</label>
        <link refid="_grid_8h"/>
      </node>
      <node id="649">
        <label>cmath</label>
      </node>
      <node id="655">
        <label>AssetManager.h</label>
        <link refid="_asset_manager_8h"/>
        <childnode refid="656" relation="include">
        </childnode>
        <childnode refid="642" relation="include">
        </childnode>
      </node>
      <node id="656">
        <label>string</label>
      </node>
      <node id="641">
        <label>map</label>
      </node>
      <node id="647">
        <label>BoundaryBox.h</label>
        <link refid="_boundary_box_8h"/>
        <childnode refid="648" relation="include">
        </childnode>
        <childnode refid="649" relation="include">
        </childnode>
        <childnode refid="650" relation="include">
        </childnode>
        <childnode refid="642" relation="include">
        </childnode>
      </node>
      <node id="650">
        <label>tuple</label>
      </node>
      <node id="636">
        <label>Presentation.cpp</label>
        <link refid="_presentation_8cpp"/>
        <childnode refid="637" relation="include">
        </childnode>
      </node>
      <node id="661">
        <label>SFML/Graphics/Texture.hpp</label>
      </node>
      <node id="642">
        <label>vector</label>
      </node>
      <node id="646">
        <label>ObjectType.h</label>
        <link refid="_object_type_8h"/>
      </node>
      <node id="657">
        <label>SplashScreen.h</label>
        <link refid="_splash_screen_8h"/>
        <childnode refid="638" relation="include">
        </childnode>
      </node>
      <node id="662">
        <label>SFML/Graphics/Rect.hpp</label>
      </node>
      <node id="653">
        <label>CentipedeSegment.h</label>
        <link refid="_centipede_segment_8h"/>
        <childnode refid="651" relation="include">
        </childnode>
        <childnode refid="654" relation="include">
        </childnode>
        <childnode refid="644" relation="include">
        </childnode>
        <childnode refid="642" relation="include">
        </childnode>
      </node>
      <node id="660">
        <label>SpriteSheet.h</label>
        <link refid="_sprite_sheet_8h"/>
        <childnode refid="661" relation="include">
        </childnode>
        <childnode refid="662" relation="include">
        </childnode>
        <childnode refid="652" relation="include">
        </childnode>
        <childnode refid="646" relation="include">
        </childnode>
      </node>
      <node id="645">
        <label>IEntity.h</label>
        <link refid="_i_entity_8h"/>
        <childnode refid="646" relation="include">
        </childnode>
        <childnode refid="647" relation="include">
        </childnode>
        <childnode refid="648" relation="include">
        </childnode>
      </node>
      <node id="659">
        <label>GameOverScreen.h</label>
        <link refid="_game_over_screen_8h"/>
        <childnode refid="638" relation="include">
        </childnode>
      </node>
      <node id="652">
        <label>Direction.h</label>
        <link refid="_direction_8h"/>
      </node>
      <node id="637">
        <label>Presentation.h</label>
        <link refid="_presentation_8h"/>
        <childnode refid="638" relation="include">
        </childnode>
        <childnode refid="639" relation="include">
        </childnode>
        <childnode refid="640" relation="include">
        </childnode>
        <childnode refid="641" relation="include">
        </childnode>
        <childnode refid="642" relation="include">
        </childnode>
        <childnode refid="643" relation="include">
        </childnode>
        <childnode refid="644" relation="include">
        </childnode>
        <childnode refid="645" relation="include">
        </childnode>
        <childnode refid="651" relation="include">
        </childnode>
        <childnode refid="653" relation="include">
        </childnode>
        <childnode refid="655" relation="include">
        </childnode>
        <childnode refid="657" relation="include">
        </childnode>
        <childnode refid="658" relation="include">
        </childnode>
        <childnode refid="659" relation="include">
        </childnode>
        <childnode refid="660" relation="include">
        </childnode>
      </node>
      <node id="644">
        <label>algorithm</label>
      </node>
      <node id="640">
        <label>SFML/Audio/Music.hpp</label>
      </node>
      <node id="643">
        <label>memory</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_presentation_8h" kindref="compound">Presentation.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3" refid="class_presentation_1a19a15db3b478318bbcdb894994a81fb6" refkind="member"><highlight class="normal"><ref refid="class_presentation_1a19a15db3b478318bbcdb894994a81fb6" kindref="member">Presentation::Presentation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>screen_width,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>screen_height):</highlight></codeline>
<codeline lineno="4"><highlight class="normal">window_(sf::VideoMode(screen_width,<sp/>screen_height),<sp/></highlight><highlight class="stringliteral">&quot;Centipede<sp/>LM&quot;</highlight><highlight class="normal">,<sp/>sf::Style::Close),</highlight></codeline>
<codeline lineno="5"><highlight class="normal">background_(sf::Color::Black),</highlight></codeline>
<codeline lineno="6"><highlight class="normal">isLeftPressed_{</highlight><highlight class="keyword">false</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><ref refid="class_presentation_1a0e2be276f4cb95173da9df04c16e7981" kindref="member">isRightPressed_</ref>{</highlight><highlight class="keyword">false</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><ref refid="class_presentation_1af9aba72db98840fdb1d2dc892f564a3d" kindref="member">isUpPressed_</ref>{</highlight><highlight class="keyword">false</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><ref refid="class_presentation_1a38e0f5a84f4b0379c6f7778db94c81e2" kindref="member">isDownPressed_</ref>{</highlight><highlight class="keyword">false</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><ref refid="class_presentation_1a3408af9750851434bdfbb2265ad4a76b" kindref="member">isSpacePressed_</ref>{</highlight><highlight class="keyword">false</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14" refid="class_presentation_1ab2284a509e0dd35fb10b11bb05d220ca" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_presentation_1ab2284a509e0dd35fb10b11bb05d220ca" kindref="member">Presentation::processPlayerShootSound</ref>()</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iter_map<sp/>=<sp/><ref refid="class_presentation_1abe9fd0e9a69ea46cb1fd1b3c59dded70" kindref="member">game_sounds_</ref>.find(<ref refid="class_presentation_1a7f62aed96ac24f3394d8efba586fa772a9febb5f229986f78edb73071253e9a66" kindref="member">GameSounds::GUN_SHOT</ref>);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>(iter_map-&gt;second)-&gt;stop();</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>(iter_map-&gt;second)-&gt;play();</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="class_presentation_1ae34050372fa270232dce9f2666c1f2f6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_presentation_1ae34050372fa270232dce9f2666c1f2f6" kindref="member">Presentation::processGameObjectSound</ref>(<ref refid="_object_type_8h_1a842c5e2e69277690b064bf363c017980" kindref="member">ObjectType</ref><sp/>object_type)</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>temp_object_with_sound_start<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="_object_type_8h_1a842c5e2e69277690b064bf363c017980afd232a32dcfdd49f24c59870b97e66ce" kindref="member">ObjectType::MUSHROOM</ref>);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>temp_object<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(object_type);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(temp_object&gt;=temp_object_with_sound_start)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_object-=temp_object_with_sound_start;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>temp_sound<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_presentation_1a7f62aed96ac24f3394d8efba586fa772" kindref="member">GameSounds</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(temp_object+1);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iter_map<sp/>=<sp/><ref refid="class_presentation_1abe9fd0e9a69ea46cb1fd1b3c59dded70" kindref="member">game_sounds_</ref>.find(temp_sound);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((iter_map-&gt;second)-&gt;getStatus()!=sf::Music::Playing)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(iter_map-&gt;second)-&gt;setVolume(5);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(iter_map-&gt;second)-&gt;stop();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(iter_map-&gt;second)-&gt;play();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="class_presentation_1aa37ace23fc7d4fd50e520670510dd9fe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_presentation_1aa37ace23fc7d4fd50e520670510dd9fe" kindref="member">Presentation::checkInput</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sf::Keyboard::Key<sp/>key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isPressed)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(key<sp/>==<sp/>sf::Keyboard::Left)<sp/><ref refid="class_presentation_1a519c0df57f7d36e69a723eb2081ddc39" kindref="member">isLeftPressed_</ref><sp/>=<sp/>isPressed;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(key<sp/>==<sp/>sf::Keyboard::Right)<sp/><ref refid="class_presentation_1a0e2be276f4cb95173da9df04c16e7981" kindref="member">isRightPressed_</ref><sp/>=<sp/>isPressed;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(key<sp/>==<sp/>sf::Keyboard::Up)<sp/><ref refid="class_presentation_1af9aba72db98840fdb1d2dc892f564a3d" kindref="member">isUpPressed_</ref><sp/>=<sp/>isPressed;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(key<sp/>==<sp/>sf::Keyboard::Down)<sp/><ref refid="class_presentation_1a38e0f5a84f4b0379c6f7778db94c81e2" kindref="member">isDownPressed_</ref><sp/>=<sp/>isPressed;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(key<sp/>==<sp/>sf::Keyboard::Space)<ref refid="class_presentation_1a3408af9750851434bdfbb2265ad4a76b" kindref="member">isSpacePressed_</ref><sp/>=<sp/>isPressed;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="class_presentation_1a0ae752fb12e3530acd81469e68d743a3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_presentation_1a0ae752fb12e3530acd81469e68d743a3" kindref="member">Presentation::processInputEvents</ref>()</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>sf::Event<sp/>event;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<ref refid="class_presentation_1ae243e0a0e6f16eaf3bcac7179e2430b9" kindref="member">window_</ref>.pollEvent(event)){</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(event.type){</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>sf::Event::Closed:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_presentation_1ae243e0a0e6f16eaf3bcac7179e2430b9" kindref="member">window_</ref>.close();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>sf::Event::KeyPressed:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_presentation_1aa37ace23fc7d4fd50e520670510dd9fe" kindref="member">checkInput</ref>(event.key.code,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>sf::Event::KeyReleased:</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_presentation_1aa37ace23fc7d4fd50e520670510dd9fe" kindref="member">checkInput</ref>(event.key.code,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//switch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//while</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="class_presentation_1a0e099ace00ac0fd6f502c8df51d67fa6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_presentation_1a0e099ace00ac0fd6f502c8df51d67fa6" kindref="member">Presentation::generateSpriteSheet</ref>(<ref refid="_object_type_8h_1a842c5e2e69277690b064bf363c017980" kindref="member">ObjectType</ref><sp/>object_type,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf::Vector2u<sp/>imageCount,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>switchTime,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_direction_8h_1a224b9163917ac32fc95a60d8c1eec3aa" kindref="member">Direction</ref><sp/>direction)</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>to<sp/>spritesheet<sp/>for<sp/>animations:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iter_map<sp/>=<sp/><ref refid="class_presentation_1a50c6e471561f2f96b279d4a5aa1e470a" kindref="member">game_textures_</ref>.find(object_type);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sprite_sheet" kindref="compound">SpriteSheet</ref><sp/>sprite_image{object_type,<sp/>&amp;(iter_map-&gt;second),</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imageCount,<sp/>switchTime,<sp/>row,<sp/>direction};</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_presentation_1ab1b88938eb755b4f896d8f386e4d8542" kindref="member">sprite_sheets_</ref>.push_back(sprite_image);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="class_presentation_1a04c43fe2cf2fe4b969c034eee5d4b1e2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_presentation_1a04c43fe2cf2fe4b969c034eee5d4b1e2" kindref="member">Presentation::populateSpriteSheets</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_object_type_8h_1a842c5e2e69277690b064bf363c017980" kindref="member">ObjectType</ref>&amp;<sp/>object_type)</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>switch_time<sp/>=<sp/>0.3f;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>0u;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>image_count_columns<sp/>=<sp/>0u;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>image_count_rows<sp/>=<sp/>0u;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(object_type){</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_object_type_8h_1a842c5e2e69277690b064bf363c017980ac68f4cf41704abc0bb325bdc35cb7da5" kindref="member">ObjectType::CENTIPEDE</ref>:</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row<sp/>=<sp/>0u;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CentipedeSegment<sp/>Head</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image_count_columns<sp/>=<sp/>8u;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image_count_rows<sp/><sp/><sp/><sp/>=<sp/>2u;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_presentation_1a0e099ace00ac0fd6f502c8df51d67fa6" kindref="member">generateSpriteSheet</ref>(object_type,<sp/>row,<sp/>sf::Vector2u{image_count_columns,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image_count_rows},<sp/>switch_time,<sp/><ref refid="_direction_8h_1a224b9163917ac32fc95a60d8c1eec3aaa684d325a7303f52e64011467ff5c5758" kindref="member">Direction::LEFT</ref>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row<sp/>=<sp/>1u;<sp/></highlight><highlight class="comment">//<sp/>CentipedeSegment<sp/>Body</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_presentation_1a0e099ace00ac0fd6f502c8df51d67fa6" kindref="member">generateSpriteSheet</ref>(object_type,<sp/>row,<sp/>sf::Vector2u{image_count_columns,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image_count_rows},<sp/>switch_time,<sp/><ref refid="_direction_8h_1a224b9163917ac32fc95a60d8c1eec3aaa684d325a7303f52e64011467ff5c5758" kindref="member">Direction::LEFT</ref>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_object_type_8h_1a842c5e2e69277690b064bf363c017980afd232a32dcfdd49f24c59870b97e66ce" kindref="member">ObjectType::MUSHROOM</ref>:</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image_count_columns<sp/>=<sp/>4u;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image_count_rows<sp/><sp/><sp/><sp/>=<sp/>2u;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row<sp/>=<sp/>0u;<sp/></highlight><highlight class="comment">//<sp/>Normal<sp/>Mushroom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>switch_time<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_presentation_1a0e099ace00ac0fd6f502c8df51d67fa6" kindref="member">generateSpriteSheet</ref>(object_type,<sp/>row,<sp/>sf::Vector2u{image_count_columns,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image_count_rows},<sp/>switch_time,<sp/><ref refid="_direction_8h_1a224b9163917ac32fc95a60d8c1eec3aaab50339a10e1de285ac99d4c3990b8693" kindref="member">Direction::NONE</ref>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row<sp/>=<sp/>1u;<sp/></highlight><highlight class="comment">//<sp/>Poisoned<sp/>Mushroom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_presentation_1a0e099ace00ac0fd6f502c8df51d67fa6" kindref="member">generateSpriteSheet</ref>(object_type,<sp/>row,<sp/>sf::Vector2u{image_count_columns,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image_count_rows},<sp/>switch_time,<sp/><ref refid="_direction_8h_1a224b9163917ac32fc95a60d8c1eec3aaab50339a10e1de285ac99d4c3990b8693" kindref="member">Direction::NONE</ref>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_object_type_8h_1a842c5e2e69277690b064bf363c017980aad43791d4a1bab20f04a2d8a85ffc34b" kindref="member">ObjectType::SCORPION</ref>:</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image_count_columns<sp/>=<sp/>4u;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image_count_rows<sp/><sp/><sp/><sp/>=<sp/>1u;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row<sp/>=<sp/>0u;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scorpion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_presentation_1a0e099ace00ac0fd6f502c8df51d67fa6" kindref="member">generateSpriteSheet</ref>(object_type,<sp/>row,<sp/>sf::Vector2u{image_count_columns,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image_count_rows},<sp/>switch_time,<sp/><ref refid="_direction_8h_1a224b9163917ac32fc95a60d8c1eec3aaa684d325a7303f52e64011467ff5c5758" kindref="member">Direction::LEFT</ref>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_object_type_8h_1a842c5e2e69277690b064bf363c017980a9e7abc16c6a1b9bcd2d330c63933d981" kindref="member">ObjectType::SPIDER</ref>:</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image_count_columns<sp/>=<sp/>8u;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image_count_rows<sp/><sp/><sp/><sp/>=<sp/>2u;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row<sp/>=<sp/>0u;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scorpion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_presentation_1a0e099ace00ac0fd6f502c8df51d67fa6" kindref="member">generateSpriteSheet</ref>(object_type,<sp/>row,<sp/>sf::Vector2u{image_count_columns,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image_count_rows},<sp/>switch_time,<sp/><ref refid="_direction_8h_1a224b9163917ac32fc95a60d8c1eec3aaac4e0e4e3118472beeb2ae75827450f1f" kindref="member">Direction::DOWN</ref>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//switch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="class_presentation_1ad61f8a299c4e23f6e9d51692929f8333" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_presentation_1ad61f8a299c4e23f6e9d51692929f8333" kindref="member">Presentation::loadTextures</ref>(vector&lt;AssetManager&gt;game_assets)</highlight></codeline>
<codeline lineno="141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iter_last_sound<sp/>=<sp/>std::find_if(game_assets.begin(),<sp/>game_assets.end(),</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_asset_manager" kindref="compound">AssetManager</ref>&amp;<sp/>asset)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(asset.getAssetType()<sp/>==<sp/><ref refid="class_asset_manager_1ab4e7588608f25b6b0bc502fc62ace728a07c80e2a355d91402a00d82b1fa13855" kindref="member">AssetManager::AssetType::PLAYER</ref>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iter_asset<sp/>=<sp/>game_assets.begin();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_presentation_1ab7600143ae53c8710de7ce4efb048273" kindref="member">font_</ref>.loadFromFile(iter_asset-&gt;getAssetPath());</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>sounds:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sound_id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(++iter_asset;<sp/>iter_asset<sp/>!=<sp/>iter_last_sound;<sp/>++iter_asset)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>temp_sound<sp/>=<sp/>std::make_shared&lt;sf::Music&gt;();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_sound-&gt;openFromFile(iter_asset-&gt;getAssetPath());</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_sound-&gt;setVolume(10);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>temp_pair<sp/>=<sp/>pair&lt;GameSounds,<sp/>shared_ptr&lt;sf::Music&gt;&gt;(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_presentation_1a7f62aed96ac24f3394d8efba586fa772" kindref="member">GameSounds</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(sound_id++),</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_sound);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_presentation_1abe9fd0e9a69ea46cb1fd1b3c59dded70" kindref="member">game_sounds_</ref>.insert(temp_pair);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>object<sp/>textures:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>;<sp/>iter_asset<sp/>!=<sp/>game_assets.end();<sp/>++iter_asset)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf::Texture<sp/>texture;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>texture.loadFromFile(iter_asset-&gt;getAssetPath());</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iter_asset-&gt;getAssetType()<sp/>!=<sp/><ref refid="class_asset_manager_1ab4e7588608f25b6b0bc502fc62ace728a5fb9dc502beb6f75a2175f0ea535437d" kindref="member">AssetManager::AssetType::BULLET</ref></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>iter_asset-&gt;getAssetType()<sp/>!=<sp/><ref refid="class_asset_manager_1ab4e7588608f25b6b0bc502fc62ace728aad43791d4a1bab20f04a2d8a85ffc34b" kindref="member">AssetManager::AssetType::SCORPION</ref>)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>texture.setSmooth(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>temp_object_id<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(iter_asset-&gt;getAssetType());</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>temp_player_id<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_asset_manager_1ab4e7588608f25b6b0bc502fc62ace728a07c80e2a355d91402a00d82b1fa13855" kindref="member">AssetManager::AssetType::PLAYER</ref>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>temp_object_type<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="_object_type_8h_1a842c5e2e69277690b064bf363c017980" kindref="member">ObjectType</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(temp_object_id-temp_player_id);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>temp_pair<sp/>=<sp/>pair&lt;ObjectType,<sp/>sf::Texture&gt;(temp_object_type,<sp/>texture);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_presentation_1a50c6e471561f2f96b279d4a5aa1e470a" kindref="member">game_textures_</ref>.insert(temp_pair);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>object<sp/>with<sp/>animated<sp/>movement,<sp/>generate<sp/>spritesheet<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_presentation_1a04c43fe2cf2fe4b969c034eee5d4b1e2" kindref="member">populateSpriteSheets</ref>(temp_object_type);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="class_presentation_1ac00c099bbecd8d84bd7c536d4e6d3aa7" refkind="member"><highlight class="normal">sf::Sprite<sp/><ref refid="class_presentation_1ac00c099bbecd8d84bd7c536d4e6d3aa7" kindref="member">Presentation::generateSpriteFromSpriteSheet</ref>(shared_ptr&lt;IEntity&gt;<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>for<sp/>spritesheet:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>sf::Sprite<sp/>gameObjectsSprite;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>entity_type<sp/>=<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">-&gt;getObjectType();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iter_map<sp/>=<sp/><ref refid="class_presentation_1a50c6e471561f2f96b279d4a5aa1e470a" kindref="member">game_textures_</ref>.find(entity_type);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>half<sp/>=<sp/>2.0f;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rect<sp/>=<sp/>sf::IntRect();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iter_vec<sp/>=<sp/>find_if(<ref refid="class_presentation_1ab1b88938eb755b4f896d8f386e4d8542" kindref="member">sprite_sheets_</ref>.begin(),<sp/><ref refid="class_presentation_1ab1b88938eb755b4f896d8f386e4d8542" kindref="member">sprite_sheets_</ref>.end(),</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;,<sp/>entity_type](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_sprite_sheet" kindref="compound">SpriteSheet</ref>&amp;<sp/>sheet){</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(sheet.getObjectType()==entity_type);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(entity_type<sp/>==<sp/><ref refid="_object_type_8h_1a842c5e2e69277690b064bf363c017980ac68f4cf41704abc0bb325bdc35cb7da5" kindref="member">ObjectType::CENTIPEDE</ref>)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>centipede_segment<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_centipede_segment" kindref="compound">CentipedeSegment</ref>&gt;(object);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(centipede_segment-&gt;getBodyType()<sp/>==<sp/><ref refid="class_centipede_segment_1a55c00dc8b685be1fa126c0f07dcb7793a786329b34bbe53ab40a54a19cd597f2d" kindref="member">CentipedeSegment::BodyType::BODY</ref>)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter_vec;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect<sp/>=<sp/>iter_vec-&gt;getTextureRect(centipede_segment-&gt;getDirection());</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameObjectsSprite.setRotation(centipede_segment-&gt;getRotationAngle());</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(entity_type<sp/>==<sp/><ref refid="_object_type_8h_1a842c5e2e69277690b064bf363c017980afd232a32dcfdd49f24c59870b97e66ce" kindref="member">ObjectType::MUSHROOM</ref>)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(object-&gt;isPoisoned())</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter_vec;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>maxMushLives<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mushCol<sp/>=<sp/>maxMushLives<sp/>-<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">-&gt;<ref refid="class_centipede_segment_1a395c23435c42e06001766783f074b547" kindref="member">getRemainingLives</ref>();</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect<sp/>=<sp/>iter_vec-&gt;getTextureRect(mushCol);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(entity_type<sp/>==<sp/><ref refid="_object_type_8h_1a842c5e2e69277690b064bf363c017980aad43791d4a1bab20f04a2d8a85ffc34b" kindref="member">ObjectType::SCORPION</ref>)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>scorpion<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_i_moving_entity" kindref="compound">IMovingEntity</ref>&gt;(object);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect<sp/>=<sp/>iter_vec-&gt;getTextureRect(scorpion-&gt;getDirection());</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect<sp/>=<sp/>iter_vec-&gt;getTextureRect(<ref refid="_direction_8h_1a224b9163917ac32fc95a60d8c1eec3aaac4e0e4e3118472beeb2ae75827450f1f" kindref="member">Direction::DOWN</ref>);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>Texture<sp/>rect:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>gameObjectsSprite.setTextureRect(rect);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>Origin:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>gameObjectsSprite.setOrigin(std::abs(rect.width/half),</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::abs(rect.height/half));</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gameObjectsSprite;</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="class_presentation_1ac6a714a00a8c38446e8ff298c09da90b" refkind="member"><highlight class="normal">sf::Sprite<sp/><ref refid="class_presentation_1ac6a714a00a8c38446e8ff298c09da90b" kindref="member">Presentation::generateSprite</ref>(shared_ptr&lt;IEntity&gt;<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>sf::Sprite<sp/>gameObjectsSprite;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iter_map<sp/>=<sp/><ref refid="class_presentation_1a50c6e471561f2f96b279d4a5aa1e470a" kindref="member">game_textures_</ref>.find(object-&gt;getObjectType());</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>half<sp/>=<sp/>2.0f;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(object-&gt;getObjectType()<sp/>==<sp/><ref refid="_object_type_8h_1a842c5e2e69277690b064bf363c017980a07c80e2a355d91402a00d82b1fa13855" kindref="member">ObjectType::PLAYER</ref><sp/>||</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">-&gt;getObjectType()<sp/>==<sp/><ref refid="_object_type_8h_1a842c5e2e69277690b064bf363c017980a517a025b6972ef5196709ee7e5a4f657" kindref="member">ObjectType::PLAYER_LASER_BULLET</ref>){</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>Origin:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameObjectsSprite.setOrigin((iter_map-&gt;second).getSize().x/half,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(iter_map-&gt;second).getSize().y/half);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameObjectsSprite<sp/>=<sp/><ref refid="class_presentation_1ac00c099bbecd8d84bd7c536d4e6d3aa7" kindref="member">generateSpriteFromSpriteSheet</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>Texture:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>gameObjectsSprite.setTexture(iter_map-&gt;second);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gameObjectsSprite;</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="class_presentation_1a07fe85f2fb3be047ed1bbf553662f754" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_presentation_1a07fe85f2fb3be047ed1bbf553662f754" kindref="member">Presentation::renderWindow</ref>(vector&lt;shared_ptr&lt;IEntity&gt;&gt;&amp;<sp/>game_objects,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>remaining_lives,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>player_score,</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>high_score)</highlight></codeline>
<codeline lineno="256"><highlight class="normal">{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_presentation_1ae243e0a0e6f16eaf3bcac7179e2430b9" kindref="member">window_</ref>.clear();</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_presentation_1ac13b755328c6e531b279d2e49a5503c1" kindref="member">displayLives</ref>(remaining_lives,<sp/>player_score,<sp/>high_score);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>:<sp/>game_objects){</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf::Sprite<sp/>gameObjectsSprite<sp/>=<sp/><ref refid="class_presentation_1ac6a714a00a8c38446e8ff298c09da90b" kindref="member">generateSprite</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>position:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameObjectsSprite.setPosition(object-&gt;getPosition().getX_pos(),</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">-&gt;getPosition().getY_pos());</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_presentation_1ae243e0a0e6f16eaf3bcac7179e2430b9" kindref="member">window_</ref>.draw(gameObjectsSprite);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_presentation_1ae243e0a0e6f16eaf3bcac7179e2430b9" kindref="member">window_</ref>.display();</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>animation_speed<sp/>=<sp/>0.060f;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_presentation_1a82e1c667390dd7fb683548a9ce1c7c58" kindref="member">updateAnimations</ref>(animation_speed);</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="class_presentation_1a82e1c667390dd7fb683548a9ce1c7c58" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_presentation_1a82e1c667390dd7fb683548a9ce1c7c58" kindref="member">Presentation::updateAnimations</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>delta_time){</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>sprite_image<sp/>:<sp/><ref refid="class_presentation_1ab1b88938eb755b4f896d8f386e4d8542" kindref="member">sprite_sheets_</ref>)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sprite_image.getObjectType()!=<ref refid="_object_type_8h_1a842c5e2e69277690b064bf363c017980afd232a32dcfdd49f24c59870b97e66ce" kindref="member">ObjectType::MUSHROOM</ref>)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>temp<sp/>=<sp/>delta_time;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sprite_image.getObjectType()==<ref refid="_object_type_8h_1a842c5e2e69277690b064bf363c017980aad43791d4a1bab20f04a2d8a85ffc34b" kindref="member">ObjectType::SCORPION</ref>)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp/=4.0f;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprite_image.update(temp);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289" refid="class_presentation_1ad87e0f6ada6aa68c6e15456a5e7820ea" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_presentation_1ad87e0f6ada6aa68c6e15456a5e7820ea" kindref="member">Presentation::drawSplashScreen</ref>()</highlight></codeline>
<codeline lineno="290"><highlight class="normal">{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_splash_screen" kindref="compound">SplashScreen</ref><sp/>splash_screen{};</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>splash_screen.<ref refid="class_splash_screen_1ae30ab2316faa3fa081f85fb61899689e" kindref="member">show</ref>(<ref refid="class_presentation_1ae243e0a0e6f16eaf3bcac7179e2430b9" kindref="member">window_</ref>);</highlight></codeline>
<codeline lineno="293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="class_presentation_1a40d86f3b623cbef7a04db5a312ff1368" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_presentation_1a40d86f3b623cbef7a04db5a312ff1368" kindref="member">Presentation::drawGameOverScreen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>player_score,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>high_score)</highlight></codeline>
<codeline lineno="296"><highlight class="normal">{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_game_over_screen" kindref="compound">GameOverScreen</ref><sp/>gameOverScreen;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>gameOverScreen.<ref refid="class_game_over_screen_1aed3579e06a894e3e0f3683494ef4b278" kindref="member">show</ref>(<ref refid="class_presentation_1ae243e0a0e6f16eaf3bcac7179e2430b9" kindref="member">window_</ref>,<sp/>player_score,<sp/>high_score);</highlight></codeline>
<codeline lineno="299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301" refid="class_presentation_1a2ef4507daf2ddbf356b6dfca1c8f525a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_presentation_1a2ef4507daf2ddbf356b6dfca1c8f525a" kindref="member">Presentation::drawGameWonScreen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>player_score,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>high_score)</highlight></codeline>
<codeline lineno="302"><highlight class="normal">{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_game_won_screen" kindref="compound">GameWonScreen</ref><sp/>gameWonScreen;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>gameWonScreen.<ref refid="class_game_won_screen_1aaa58eb6d7d1b13468cc65cecd0243b59" kindref="member">show</ref>(<ref refid="class_presentation_1ae243e0a0e6f16eaf3bcac7179e2430b9" kindref="member">window_</ref>,<sp/>player_score,<sp/>high_score);</highlight></codeline>
<codeline lineno="305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="class_presentation_1ac13b755328c6e531b279d2e49a5503c1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_presentation_1ac13b755328c6e531b279d2e49a5503c1" kindref="member">Presentation::displayLives</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>remaining_lives,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>player_score,</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>high_score)</highlight></codeline>
<codeline lineno="309"><highlight class="normal">{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>sf::Sprite<sp/>lives_sprite;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>half<sp/>=<sp/>2.0f;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iter_map<sp/>=<sp/><ref refid="class_presentation_1a50c6e471561f2f96b279d4a5aa1e470a" kindref="member">game_textures_</ref>.find(<ref refid="_object_type_8h_1a842c5e2e69277690b064bf363c017980a07c80e2a355d91402a00d82b1fa13855" kindref="member">ObjectType::PLAYER</ref>);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>lives_sprite.setTexture(iter_map-&gt;second);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>lives_sprite.setOrigin((iter_map-&gt;second).getSize().x/half,</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(iter_map-&gt;second).getSize().y/half);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>lives<sp/>using<sp/>a<sp/>sprite<sp/>and<sp/>player<sp/>texture:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>xPos<sp/>=<sp/>(iter_map-&gt;second).getSize().x;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;(remaining_lives-1);<sp/>i++){</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lives_sprite.setPosition(xPos,<sp/>(iter_map-&gt;second).getSize().y/half);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_presentation_1ae243e0a0e6f16eaf3bcac7179e2430b9" kindref="member">window_</ref>.draw(lives_sprite);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xPos+=(iter_map-&gt;second).getSize().x;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>Score<sp/>and<sp/>high<sp/>score:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>sf::Text<sp/>score_text(std::to_string(player_score),<sp/><ref refid="class_presentation_1ab7600143ae53c8710de7ce4efb048273" kindref="member">font_</ref>);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>score_text.setCharacterSize(20);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>sf::FloatRect<sp/>titleRect<sp/>=<sp/>score_text.getLocalBounds();</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>score_text.setOrigin(titleRect.left<sp/>+<sp/>titleRect.width/half,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>titleRect.top<sp/><sp/>+<sp/>titleRect.height/half);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>score_text.setFillColor(sf::Color::Magenta);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>score_text.setPosition(sf::Vector2f(<ref refid="class_presentation_1ae243e0a0e6f16eaf3bcac7179e2430b9" kindref="member">window_</ref>.getSize().x/half,</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>score_text.getCharacterSize()/half));</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>sf::Text<sp/>high_score_text(std::to_string(high_score),<sp/><ref refid="class_presentation_1ab7600143ae53c8710de7ce4efb048273" kindref="member">font_</ref>);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>high_score_text.setCharacterSize(20);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>titleRect<sp/>=<sp/>high_score_text.getLocalBounds();</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>high_score_text.setOrigin(titleRect.left<sp/>+<sp/>titleRect.width/half,</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>titleRect.top<sp/><sp/>+<sp/>titleRect.height/half);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>high_score_text.setFillColor(sf::Color::Yellow);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>high_score_text.setPosition(sf::Vector2f(<ref refid="class_presentation_1ae243e0a0e6f16eaf3bcac7179e2430b9" kindref="member">window_</ref>.getSize().x-titleRect.width/half,</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>high_score_text.getCharacterSize()/half));</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_presentation_1ae243e0a0e6f16eaf3bcac7179e2430b9" kindref="member">window_</ref>.draw(score_text);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_presentation_1ae243e0a0e6f16eaf3bcac7179e2430b9" kindref="member">window_</ref>.draw(high_score_text);</highlight></codeline>
<codeline lineno="348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350" refid="class_presentation_1a83620d7d530676ed6f38ac88f85907ae" refkind="member"><highlight class="normal"><ref refid="class_presentation_1a83620d7d530676ed6f38ac88f85907ae" kindref="member">Presentation::~Presentation</ref>()</highlight></codeline>
<codeline lineno="351"><highlight class="normal">{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//dtor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/Lynch-Stephen/Documents/Lecture Notes/3rd year/Semester II/ELEN3009/2018/Project/Code/game-source-code/Presentation.cpp"/>
  </compounddef>
</doxygen>
